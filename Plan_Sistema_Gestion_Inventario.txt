PLAN - SISTEMA DE GESTION DE INVENTARIO DE UNA TIENDA DE FRUTAS Y VERDURAS.

1. CLASES PRINCIPALES Y ESTRUCTURAS DE DATOS

1.1 Modulo de Gestion de Productos - ED: Lista Doblemente Enlazada
Representa los productos disponibles en la tienda (legumbres, frutas, etc.).

Atributos:
id_producto: ID único del producto.
nombre: Nombre del producto.
descripcion: Descripción del producto.
categoria: Categoría del producto (ej. Verduras, Frutas, etc.).
precio: Precio de venta por unidad.
stock: Cantidad disponible en inventario.
fecha_expiracion: Fecha de expiración (si aplica).
temporalidad: Indica si el producto es de temporada.
rebaja: Descuento aplicable al producto si está cerca de su fecha de expiración.

Funciones:
registrar_producto(): Registra un nuevo producto.
actualizar_producto(): Actualiza la información de un producto.
eliminar_producto(): Elimina un producto del inventario.
consultar_producto(): Consulta información de un producto por su ID o nombre.
aplicar_rebaja(): Aplica una rebaja a productos cercanos a su fecha de expiración.

1.2 Modulo de Gestion de Proveedor - ED: Lista Doblemente Enlazada
Representa a los proveedores que suministran los productos.

Atributos:
id_proveedor: ID único del proveedor.
nombre: Nombre del proveedor.
contacto: Información de contacto (teléfono, correo).
direccion: Dirección del proveedor.

Funciones:
registrar_proveedor(): Registra un nuevo proveedor.
actualizar_proveedor(): Modifica la información de un proveedor.
eliminar_proveedor(): Elimina un proveedor del sistema.
consultar_proveedor(): Consulta información de un proveedor por su ID o nombre.

1.3 Modulo de Gestion de Clientes - ED: Lista Doblemente Enlazada
Representa a los clientes que realizan compras.

Atributos:
id_cliente: ID único del cliente.
nombre: Nombre del cliente.
contacto: Información de contacto (teléfono, correo).
direccion: Dirección del cliente.
tipo_cliente: Tipo de cliente (ej. minorista, mayorista).
credito: Crédito disponible (opcional).

Funciones:
registrar_cliente(): Registra un nuevo cliente.
actualizar_cliente(): Actualiza la información de un cliente.
eliminar_cliente(): Elimina un cliente del sistema.
consultar_cliente(): Consulta información de un cliente por su ID o nombre.

1.4 Modulo de Gestion de Transacción - ED: Lista Doblemente Enlazada
Representa las ventas realizadas a los clientes.

Atributos:
id_transaccion: ID único de la transacción.
id_cliente: ID del cliente que realiza la compra.
productos: Lista de productos comprados.
total: Total de la transacción.
fecha: Fecha de la transacción.
tipo_pago: Método de pago (efectivo, tarjeta, crédito).
estado: Estado de la transacción (pendiente, completada, cancelada).

Funciones:
registrar_transaccion(): Registra una venta realizada.
actualizar_transaccion(): Actualiza la información de una transacción.
eliminar_transaccion(): Elimina una transacción.
consultar_transacciones(): Consulta las transacciones por cliente o fecha.

1.5 Modulo de Gestion de Movimientos - ED: Lista Doblemente Enlazada
Gestión y consulta de movimientos (ventas, compras) por fechas o tipo de transacción.

Atributos:
id_estado: ID único del movimiento.
id_transaccion: ID de la transacción relacionada.
fecha: Fecha en que se realizó el movimiento.
tipo: Tipo de movimiento (compra/venta).

Funciones:
consultar_movimiento_por_fecha(): Consulta movimientos (ventas o compras) por fecha.
consultar_movimiento_por_tipo(): Consulta movimientos por tipo (compra o venta).

1.6 Modulo de Gestion de Rotaciones - ED: Usa Lista Doblemente Enlazada de Productos internamente
Clase adicional para manejar la lógica de rotación del inventario, temporalidad y rebajas.

Atributos:
(Internamente utiliza una instancia de ListaProductos)

Funciones:
verificar_temporada(): Verifica si un producto está marcado como de temporada.
verificar_rebaja(): Verifica la rebaja aplicada a un producto.
obtener_productos_temporada(): Devuelve una lista de productos marcados como de temporada.
obtener_productos_rebajados(): Devuelve una lista de productos con rebaja aplicada.
aplicar_rebajas_expiracion(): Aplica rebajas a productos cercanos a su fecha de expiración.

2. ESTRUCTURA DE LA BASE DE DATOS
2.1 Tabla Productos:
id_producto: INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
nombre: TEXT NOT NULL,
descripcion: TEXT,
categoria: TEXT NOT NULL,
precio: REAL NOT NULL CHECK(precio >= 0),
stock: INTEGER NOT NULL CHECK(stock >= 0),
fecha_expiracion: DATE,
temporalidad: BOOLEAN NOT NULL DEFAULT 0,
rebaja: REAL NOT NULL DEFAULT 0

2.2 Tabla Proveedores:
id_proveedor: INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
nombre: TEXT NOT NULL,
contacto: TEXT,
direccion: TEXT

2.3 Tabla Clientes:
id_cliente: INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
nombre: TEXT NOT NULL,
contacto: TEXT,
direccion: TEXT,
tipo_cliente: TEXT NOT NULL,
credito: REAL NOT NULL DEFAULT 0

2.4 Tabla Transacciones:
id_transaccion: INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
id_cliente: INTEGER NOT NULL,
productos: TEXT NOT NULL,
total: REAL NOT NULL CHECK(total >= 0),
fecha: DATE NOT NULL,
tipo_pago: TEXT NOT NULL,
estado: TEXT NOT NULL,
FOREIGN KEY (id_cliente) REFERENCES Clientes(id_cliente) ON DELETE CASCADE

2.5 Tabla Movimientos:
id_estado: INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
id_transaccion: INTEGER NOT NULL,
fecha: DATE NOT NULL,
tipo: TEXT NOT NULL,
FOREIGN KEY (id_transaccion) REFERENCES Transacciones(id_transaccion) ON DELETE CASCADE

2.6 Tabla Rotaciones:
id_producto: INTEGER NOT NULL,
fecha_inicio: DATE NOT NULL,
fecha_fin: DATE NOT NULL,
tipo: TEXT NOT NULL,
FOREIGN KEY (id_producto) REFERENCES Productos(id_producto) ON DELETE CASCADE

3. FLUJO DE OPERACIONES EN EL SISTEMA

3.1 Gestión de Inventario:

Productos: Los productos se gestionan mediante modulo Productos, y se actualizan según el stock disponible, la expiración, y las rebajas aplicadas. Los productos de temporada serán manejados separadamente para garantizar que solo se vendan cuando estén disponibles.

3.2 Gestión de Proveedores:
Los proveedores se gestionan mediante el modulo Proveedores, lo que facilita el registro y actualización de datos sobre quién suministra los productos. Este módulo garantiza que siempre haya un registro de proveedores actualizado para obtener productos.

3.3 Gestión de Clientes:
Los clientes se gestionan mediante el modulo de Clientes, con soporte para su tipo (minorista, mayorista) y un sistema de crédito. Además, las transacciones se pueden registrar y consultar para hacer un seguimiento de los pagos.

3.4 Gestión de Transacciones:
Las ventas se registran mediante el modulo Transacciones. Cada transacción está asociada a un cliente y se almacenan los productos vendidos, el total de la venta, la fecha y los detalles de pago. Las transacciones pueden ser consultadas por fecha o por cliente, lo que permite tener un control eficiente de ventas.

3.5 Gestión de Movimientos:
A través de el modulo Movimientos, se pueden consultar los movimientos de inventario (ventas y compras) para obtener información sobre la rotación de los productos en el tiempo. Esta clase ayuda a mantener un seguimiento de las operaciones de compra y venta realizadas.

3.6 Gestión de Rotaciones: El modulo de Rotaciones se encargará de gestionar las fechas de entrada y salida de productos, clasificando los productos según su temporalidad y aplicando rebajas a aquellos que están por expirar.

4. CASOS ESPECIALES SIMULADOS (SimPy) DE ROTACIONES

4.1 Productos por Temporada:
Se debe implementar un sistema que marque ciertos productos como de temporada. Esto asegurará que dichos productos solo estén disponibles para su venta durante ciertas épocas del año.

4.2 Rebajas por Productos a Punto de Expirar:
Los productos cercanos a su fecha de expiración tendrán descuentos automáticos, registrados a través del atributo rebaja de la clase Producto. Estos productos deberán ser visualizados en una categoría especial de "Rebajas" para atraer a los clientes.

4.3 Gestión de Inventarios por Fecha y Tipo:
La base de datos y las clases estarán estructuradas para que se pueda consultar inventarios por fecha y tipo de transacción. Los movimientos de inventario se registrarán en la tabla Movimientos para consultas rápidas.